resources:
  # Optional; if left out, automatically pick the cheapest cloud.
  cloud: aws
  # 1x NVIDIA V100 GPU
  accelerators: V100:1 

# Working directory (optional) containing the project codebase.
# Its contents are synced to ~/sky_workdir/ on the cluster.
#workdir: .

file_mounts:
  ~/dataset:
    name: dm-dataset # Make sure it is unique or you own this bucket name
    store: s3 # Could be either of [s3, gcs, r2]. Defaults to None.
    persistent: True  # Set to False to delete the bucket after the task is done. Defaults to True.
    mode: MOUNT  # MOUNT or COPY. Defaults to MOUNT if not specified
  ~/exp:
    name: dm-exps # Make sure it is unique or you own this bucket name
    store: s3 # Could be either of [s3, gcs, r2]. Defaults to None.
    persistent: True  # Set to False to delete the bucket after the task is done. Defaults to True.
    mode: MOUNT  # MOUNT or COPY. Defaults to MOUNT if not specified

# Typical use: pip install -r requirements.txt
# Invoked under the workdir (i.e., can use its files).
#python --base configs/consistent-latent-diffusion/consistent_latent.yaml -t --gpus "0,1,2,3,4,5,6,7" -l home/ubuntu/exp/stablediffusion/test_full_tuning/
setup: |
  cd ~/
  git clone git@github.com:vincegmz/stable-diffusion.git
  cd stable-diffusion
  conda env create -f environment.yaml
  conda activate ldm
  mkdir -p models/ldm/stable-diffusion-v1/
  ln -s ~/exp/huijie/pretrained_model/sd-v1-4.ckpt models/ldm/stable-diffusion-v1/model.ckpt 
  ln -s ~/exp/huijie/pretrained_model/kl-f8.ckpt models/first_stage_models/kl-f8/model.ckpt

# Typical use: make use of resources, such as running training.
# Invoked under the workdir (i.e., can use its files).

run: |
  echo "Hello, SkyPilot!"
  python --base configs/consistent-latent-diffusion/consistent_latent.yaml -t --gpus "0,1,2,3,4,5,6,7" -l home/ubuntu/exp/stablediffusion/test_full_tuning/
